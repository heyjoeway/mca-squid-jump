<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="t{e@fOUMsa!Odaxm%.e@">tilemapCurrent</variable></variables><block type="pxt-on-start" id="[kc?8r33|nC;J_hu@$L)" x="20" y="20"><statement name="HANDLER"><block type="variables_set" id="m?n+5V^A9VKd(K8C2anH"><field name="VAR" id="t{e@fOUMsa!Odaxm%.e@">tilemapCurrent</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="tiles_tilemap_editor" id="aX~:T_2Ujsh](Lx1PZSi"><field name="tilemap">tilemap`level`</field><data>{"commentRefs":[],"fieldData":{"tilemap":"level1"}}</data></block></value><next><block type="set_current_tilemap" id="xu#Ko.mKYgUMc-xL$6Y6"><value name="tilemap"><shadow type="tiles_tilemap_editor"></shadow><block type="variables_get" id="eYxWdCQ{#((7S0%aY*+*"><field name="VAR" id="t{e@fOUMsa!Odaxm%.e@">tilemapCurrent</field></block></value><next><block type="typescript_statement" id="XtbwEeL5.1F76gq:.2J#" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class ObjSquiddy {" line1="    defaultImg = assets.animation`squid`[0];" line2="    sprite: Sprite = null;" line3="    timeJumpStart = 0;" line4="    stopped = false;" line5="" line6="    constructor() {" line7="        this.sprite = sprites.create(this.defaultImg, SpriteKind.Player);" line8="        this.sprite.setStayInScreen(false);" line9="" line10="        this.sprite.ay = 225       " line11="        this.sprite.y = tilemapCurrent.height * 16 - 8" line12="        this.sprite.x = 6 * 16;" line13="" line14="        // Squid jump anim start" line15="        controller.A.onEvent(" line16="            ControllerButtonEvent.Pressed," line17="            () =&gt; this.startJump()" line18="        );" line19="        controller.A.onEvent(" line20="            ControllerButtonEvent.Released," line21="            () =&gt; this.releaseJump()" line22="        );" line23="" line24="        forever(() =&gt; this.loop());" line25="    }" line26="" line27="    startJump() {" line28="        if (this.stopped) return;" line29="" line30="        animation.runImageAnimation(" line31="            this.sprite," line32="            assets.animation`squid`," line33="            100," line34="            false" line35="        )" line36="        this.timeJumpStart = game.runtime();" line37="    }" line38="" line39="    releaseJump() {" line40="        if (this.stopped) return;" line41="" line42="        animation.stopAnimation(" line43="            animation.AnimationTypes.ImageAnimation," line44="            this.sprite" line45="        );" line46="        this.sprite.setImage(this.defaultImg)" line47="" line48="        // Need to be on ground" line49="        if (!this.sprite.isHittingTile(CollisionDirection.Bottom))" line50="            return;" line51="" line52="        let jumpPowerMax = -250 // vy" line53="        let jumpChargeTimeMax = 1000.0 // milliseconds" line54="        let jumpPower = (Math.min(" line55="            game.runtime() - this.timeJumpStart," line56="            jumpChargeTimeMax" line57="        ) / jumpChargeTimeMax) * jumpPowerMax" line58="        this.sprite.vy = Math.min(this.sprite.vy, jumpPower)" line59="" line60="        music.playSoundEffect(" line61="            music.createSoundEffect(WaveShape.Square, 1902, 253, 88, 7, 250, SoundExpressionEffect.Tremolo, InterpolationCurve.Logarithmic)," line62="            SoundExpressionPlayMode.UntilDone" line63="        );" line64="    }" line65="" line66="    loopCamera() {" line67="        scene.centerCameraAt(6 * 16, this.sprite.y);" line68="    }" line69="" line70="    loopBounds() {" line71="        let leftBound = 8;" line72="        let rightBound = leftBound * 2 + screen.width;" line73="        if (this.sprite.x &lt; leftBound) this.sprite.x = rightBound;" line74="        else if (this.sprite.x &gt; rightBound) this.sprite.x = leftBound;" line75="    }" line76="" line77="    stop() {" line78="        this.stopped = true;" line79="        this.sprite.vx = 0;" line80="        this.sprite.vy = 0;" line81="        this.sprite.ax = 0;" line82="        this.sprite.ay = 0;" line83="    }" line84="" line85="    win() {" line86="        this.stop();" line87="        sfxWin();" line88="" line89="        let text = (`" line90="                   " line91="        GOAL!      " line92="  STAGE BONUS  100  " line93="   TIME BONUS  100  " line94="                    `)" line95="        " line96="        let textItems = [" line97="            { x: 0, y: -12, text: &quot;GOAL!&quot; }," line98="            { x: 0, y: 0, text: &quot;STAGE BONUS 300&quot; }," line99="            { x: 0, y: 12, text: &quot;TIME BONUS 100&quot; }" line100="        ];" line101="" line102="        textItems.forEach(item =&gt; {" line103="            let textSprite = textsprite.create(item.text);" line104="            textSprite.x = item.x + scene.cameraLeft() + (screen.width / 2);" line105="            textSprite.y = item.y + scene.cameraTop() + (screen.height / 2);" line106="            textSprite.setMaxFontHeight(6);" line107="        });" line108="    }" line109="" line110="    loopTiles() {" line111="        let tileLocation = this.sprite.tilemapLocation();" line112="" line113="        if (tiles.tileAtLocationEquals(tileLocation, assets.tile`zapfish`))" line114="            this.win();" line115="    }" line116="" line117="    loop() {" line118="        if (this.stopped) return;" line119="" line120="        if (this.sprite.vy &lt; 0) {" line121="            this.sprite.setFlag(SpriteFlag.GhostThroughWalls, true);" line122="        } else {" line123="            this.sprite.setFlag(SpriteFlag.GhostThroughWalls, false);" line124="        }" line125="" line126="        let squiddyAcc = 100;" line127="        if (this.sprite.isHittingTile(CollisionDirection.Bottom)) {" line128="            this.sprite.ax = 0;" line129="            this.sprite.vx = 0;" line130="        } if (controller.left.isPressed())" line131="            this.sprite.ax = -squiddyAcc;" line132="        else if (controller.right.isPressed())" line133="            this.sprite.ax = squiddyAcc;" line134="        else" line135="            this.sprite.ax = 0;" line136="" line137="        this.loopBounds();" line138="        this.loopCamera();" line139="        this.loopTiles();" line140="    }" line141="}" numlines="142"></mutation><next><block type="gamesetbackgroundimage" id="8DELJtLnt[@2Zir.9M:w"><value name="img"><shadow type="background_image_picker" id=")V%BYRbkgGPW!q^8nXBi"><field name="img">assets.image`bg`</field><data>{"commentRefs":[],"fieldData":{"img":"myImages.image1"}}</data></shadow></value><next><block type="typescript_statement" id="lhj%W-:S(C@o9dVx7At1" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let squiddy = new ObjSquiddy();" numlines="1" declaredvars="squiddy"></mutation></block></next></block></next></block></next></block></next></block></statement></block><block type="forever" id="KKo_ze)DYG$W@Byyt8w9" x="20" y="6053"><statement name="HANDLER"><block type="scroller_setBackgroundScrollOffset" id="=kg/g(kgc2%B7X,;03mG"><mutation xmlns="http://www.w3.org/1999/xhtml" _expanded="0" _input_init="true"></mutation><comment pinned="false" h="80" w="160">Adjust BG pos</comment><value name="x"><shadow type="math_number" id="*3.6[9xK$^!jw*tkZK7a"><field name="NUM">0</field></shadow></value><value name="y"><block type="function_call_output" id=".vbXL(+g)~p(9wz2X~S#"><mutation name="getBGPos" functionid="ZIw)/OhcHtte}^:FN8!O"></mutation></block></value></block></statement></block><block type="function_definition" id="9_A/d2g1B7g_~^[i6z7L" x="632" y="6053"><mutation name="getBGPos" functionid="ZIw)/OhcHtte}^:FN8!O"></mutation><field name="function_name">getBGPos</field><statement name="STACK"><block type="function_return" id="vWXc5Bto2f5lVU7sSDYa"><mutation xmlns="http://www.w3.org/1999/xhtml" no_return_value="false"></mutation><value name="RETURN_VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="~aMxnc`Uj+U$Uv.!%8}="><field name="OP">ADD</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="B1r/[bO00?a:9L=U2;Zf"><field name="OP">MINUS</field><value name="A"><shadow type="math_number" id="pzw9GF!]t~i0|QAhzuC$"><field name="NUM">0</field></shadow></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="cameraproperty" id="UK53W#Hu}6[,.CsR~j-g"><field name="property">CameraProperty.Y</field></block></value></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="n9^IO$.A~iNv8RUk,!-%"><field name="OP">DIVIDE</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="arcade_game_runtime" id=".:g.1Ae@foF$S%ZvqVZz"></block></value><value name="B"><shadow type="math_number" id="Zu[!,)iD*UY!hrNv}nX("><field name="NUM">100</field></shadow></value></block></value></block></value></block></statement></block><block type="function_definition" id="nsU%LcQ}@vkGmj1AIKH;" x="20" y="6268"><mutation name="sfxWin" functionid="-r])(hHl;6f%P[B)4-Lc"></mutation><field name="function_name">sfxWin</field><statement name="STACK"><block type="timer_background" id="nx]6]5V8ig#w,_!h7s:H"><statement name="HANDLER"><block type="playMelody" id="wSFi*hd7NXrX76RjPMxz"><value name="melody"><shadow type="melody_editor" id="rx#L-t@Av.8^[l]ciBRE"><field name="melody">"G5"</field></shadow></value><value name="tempo"><shadow type="math_number_minmax" id="Jtnht{|()T##K+~n*L~8"><mutation min="40" max="500" label="Number" precision="0"></mutation><field name="SLIDER">500</field></shadow></value><next><block type="playMelody" id="P*,!qC)^41TqfE0K+O*K"><value name="melody"><shadow type="melody_editor" id="i8},CBxCh3jZMG2(eOsX"><field name="melody">"- - - - - - - - "</field></shadow></value><value name="tempo"><shadow type="math_number_minmax" id="!31OJDjZSSCqqN(pCy78"><mutation min="40" max="500" label="Number" precision="0"></mutation><field name="SLIDER">500</field></shadow></value><next><block type="playMelody" id="d(o[3q0WZU?L6Xx)OIE+"><value name="melody"><shadow type="melody_editor" id="[~_/mlMPB.4E.|ShfY2/"><field name="melody">"G5"</field></shadow></value><value name="tempo"><shadow type="math_number_minmax" id="1s/,1z]Z_;cWDT=$hi{."><mutation min="40" max="500" label="Number" precision="0"></mutation><field name="SLIDER">550</field></shadow></value><next><block type="playMelody" id="7:k9Q!+)~y=wBV@7*^c("><value name="melody"><shadow type="melody_editor" id="PT*DTm+Q~hsw/bU}Z.MA"><field name="melody">"C6"</field></shadow></value><value name="tempo"><shadow type="math_number_minmax" id="vF*Lun9]!s09W?5fisPd"><mutation min="40" max="500" label="Number" precision="0"></mutation><field name="SLIDER">150</field></shadow></value></block></next></block></next></block></next></block></statement></block></statement></block></xml>